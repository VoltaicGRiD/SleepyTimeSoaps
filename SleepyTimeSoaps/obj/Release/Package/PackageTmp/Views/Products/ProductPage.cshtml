@using SleepyTimeSoaps.Models;
@model SleepyTimeSoaps.Models.Product

@{
    ViewBag.Title = Model.ProductName;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .response-dialog {
        display: block;
    }

    .response-text:after {
        content: "Success";
    }

    .response-title:after {
        content: "Response Title";
    }
</style>

<script src="https://code.jquery.com/jquery-1.10.0.min.js"
        integrity="sha256-2+LznWeWgL7AJ1ciaIG5rFP7GKemzzl+K75tRyTByOE="
        crossorigin="anonymous">
</script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"></script>

<script>
    $("#btnLink").click(function () {
        $('#ModalPopUp').modal('show');
    })

    $(function () {
        $('[data-toggle="tooltip"]').tooltip()
    })
</script>


<div class="bg-secondary w-100" style="border-radius: 20px;">

    @using (Html.BeginForm("AddToCart", "Cart"))
    {
        <div class="bg-image hover-overlay ripple shadow-1-strong rounded m-4" style="padding-top: 20px;"
             data-mdb-ripple-color="light">

            <h2 class="text-white">@Model.ProductName</h2>
            <br />
            <p class="text-white product-description"><span style="font-weight: 600; font-style: italic;">Description:<br /></span>@Model.ProductDescription</p>

            <div class="row mt-4 pb-4">
                <div class="col-md-6" style="max-width: 575px;">
                    <div class="border" style="border-radius: 15pt;">
                        <div id="ProductImageCarousel" class="carousel slide" data-ride="carousel">
                            <div class="carousel-inner">
                                <div class="carousel-item active">
                                    <img src="@Model.ProductPrimaryImageUrl" class="productpage-img" />
                                </div>
                                @foreach (string s in Model.ProductImages)
                                {
                                    <div class="carousel-item">
                                        <img src="@s" class="productpage-img" />
                                    </div>
                                }
                            </div>
                            <a class="carousel-control-prev" href="#ProductImageCarousel" role="button" data-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="sr-only">Previous</span>
                            </a>
                            <a class="carousel-control-next" href="#ProductImageCarousel" role="button" data-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="sr-only">Next</span>
                            </a>
                        </div>
                    </div>
                    <br />


                    <div class="btn-group btn-group-toggle wrapped-buttons" data-toggle="buttons">
                        <label class="btn btn-secondary active" data-toggle="tooltip" data-placement="top" title="Bar will be sent to you shrink-wrapped with bio-degradable, responsibly-sourced plastic">
                            <input type="radio" name="wrapped" id="wrapped" autocomplete="off" checked value="Wrapped"> Wrapped
                        </label>
                        <label class="btn btn-secondary" data-toggle="tooltip" data-placement="top" title="Bar will be sent to you without any plastic wrapping what-so-ever">
                            <input type="radio" name="wrapped" id="naked" autocomplete="off" value="Naked"> Naked
                        </label>
                    </div>
                    <div class="btn-group btn-group-toggle quantity-button" data-toggle="buttons">
                        <label class="btn btn-secondary active">
                            How many?&nbsp;&nbsp;
                            <input type="number" style="width:50px;" name="quantity" id="quantity" autocomplete="off" value="@Model.Quantity">
                        </label>
                    </div>
                    @Html.HiddenFor(m => m.ProductID)
                    <div class="w-100 flex-fill">
                        <button id="addToCartButton" class="btn btn-primary add-to-button">
                            <i class="bi bi-bag-plus-fill" style="font-size: 1.5rem;"></i>
                            @if (!Model.ProductHasAttributes)
                            {
                                <span>&nbsp;Add to Bag (@Model.ProductPrice.ToString("c"))</span>
                            }
                            else
                            {
                                <span>&nbsp;Add to Bag</span>
                            }
                        </button>

                        <a href="/Cart/AddToWishlist/@Model.ProductID" type="button" class="btn btn-primary add-to-button wishlist-button">
                            <i class="bi bi-list-check" style="font-size: 1.5rem;"></i>
                            Wishlist
                        </a>
                    </div>

                </div>
                <div class="col product-info-col">

                    <p class="text-warning" style="font-size: 15pt;"><span style="font-weight: 600; color: white; font-style: italic;">Scent Profile: </span>@Model.ProductScentProfile</p>

                    <p class="text-warning" style="font-size: 15pt;"><span style="font-weight: 600; color: white; font-style: italic;">Category: </span>@Model.ProductCategory</p>

                    @foreach (AttributeModel attributes in Model.Attributes)
                    {
                        <label class="text-white" for="attributes@(attributes.AttributeName)">@(attributes.AttributeName)&emsp;</label>
                        <select class="dropdown" id="attributes@(attributes.AttributeName)" name="attributes@(attributes.AttributeName)">
                            @for (int i = 0; i < attributes.Values.Count; i++)
                            {
                                if (attributes.Prices[i] > 0 || attributes.Prices[i] < 0)
                                {
                                    <option class="dropdown-item" value="@(attributes.Values[i] + " " + (attributes.Prices[i] >= 0 ? "+$" + attributes.Prices[i] : "-$" + Math.Abs(attributes.Prices[i])))">@attributes.Values[i] (@(attributes.Prices[i] >= 0 ? "+$" + attributes.Prices[i] : "-$" + Math.Abs(attributes.Prices[i])))</option>
                                }
                                else
                                {
                                    <option class="dropdown-item" value="@attributes.Values[i]">@attributes.Values[i] (@(attributes.Prices[i] >= 0 ? "+$" + attributes.Prices[i] : "-$" + Math.Abs(attributes.Prices[i])))</option>
                                }
                            }
                        </select>
                        <br />
                        <br />
                    }

                    @Html.Hidden("Product", Model._product)

                    @if (!Model.ProductHasAttributes)
                    {

                        <p class="text-warning" style="font-size: 15pt;"><span style="font-weight: 600; color: white; font-style: italic;">Stock: </span>@Model.ProductStock</p>
                    }

                    <div class="accordion" id="accordionExample">
                        <div class="card-header" id="headingOne">
                            <h2 class="mb-0">
                                <button class="btn btn-primary btn-block text-left product-collapse-button" type="button" style="font-size: 13pt; font-variant: small-caps;" data-toggle="collapse" data-target="#collapseOne" aria-expanded="false" aria-controls="collapseOne">
                                    Ingredients <small>- click/tap to show</small>
                                </button>
                            </h2>
                        </div>
                        <div id="collapseOne" class="collapse" aria-labelledby="headingOne" data-parent="#accordionExample">
                            <div class="p-2" style="background-color: #848c94;">
                                <ul class="text-white">
                                    @foreach (string s in Model.ProductIngredients.Split(','))
                                    {
                                        <li>@(Model.ProductIngredients.Split(',').ToList().IndexOf(s) + 1)<span>:</span> @s</li>
                                    }
                                </ul>
                            </div>
                        </div>
                    </div>

                    <br />
                    <div class="accordion" id="tagsAccordion">
                        <div class="card-header" id="tagsHeading">
                            <h2 class="mb-0">
                                <button class="btn btn-primary btn-block text-left product-collapse-button" type="button" style="font-size: 13pt; font-variant: small-caps;" data-toggle="collapse" data-target="#tagsCollapse" aria-expanded="false" aria-controls="tagsCollapse">
                                    Related Tags <small>- click/tap to show</small>
                                </button>
                            </h2>
                        </div>
                        <div id="tagsCollapse" class="collapse" aria-labelledby="tagsHeading" data-parent="#tagsAccordion">
                            <div class="p-2" style="background-color: #848c94;">
                                <ul class="text-white">
                                    @foreach (string s in Model.ProductTags)
                                    {
                                        <li>
                                            <a href="/Products/Index/tag=@s.Trim()" style="color: lightblue; font-size: 13pt;">
                                                @s.Trim()
                                            </a>
                                        </li>
                                    }
                                </ul>
                            </div>
                        </div>
                    </div>

                    <br />
                    <p class="text-white">size/weight: 100g | no animal testing | 100% responsibly-sourced</p>

                </div>
            </div>
            @if (!string.IsNullOrWhiteSpace(Model.ReviewXMLRaw))
            {
                if (Model.Reviews.Count > 0 && Model.Reviews != null)
                {
                    <div class="bg-dark position-relative row pl-3 pr-3 pb-2 mb-2 reviews">
                        <h3>@Model.ProductName Reviews</h3>
                        <h5 class="ml-5 mt-2 text-success">Average rating: @Model.AverageRating <i class="bi bi-star-fill reviewstar"></i></h5>
                        <div class="table-responsive">
                            <table class="table reviews">
                                <thead>
                                    <tr>
                                        <th scope="col" width="200">Reviewed By</th>
                                        <th scope="col" width="100">Rating</th>
                                        <th scope="col">Review</th>
                                    </tr>
                                </thead>
                                @foreach (Review review in Model.Reviews)
                                {
                                    <tr>
                                        <td>@review.Name</td>
                                        <td>@review.Rating <i class="bi bi-star-fill reviewstar"></i></td>
                                        <td>@review.Text</td>
                                    </tr>
                                }
                            </table>
                        </div>
                    </div>
                }
            }
            <div class="row pl-3 pr-3 pb-4">
                <p class="btn btn-outline-info text-white product-info-button" data-toggle="tooltip" data-html="true" data-placement="top" title="Our bars do not rely on any animal (or insect) testing.<br/><br/>All testing is done in a natural environment, by humans."><i class="bi bi-egg" style="font-size: 1.3rem;"></i> Tested on humans</p>
                <p class="btn btn-outline-info text-white product-info-button" data-toggle="tooltip" data-html="true" data-placement="top" title="Created with only vegan ingredients.<br/><br/>Does not contain any animal fats (or parts)." style="margin-left: 15px;"><i class="bi bi-tree" style="font-size: 1.3rem;"></i> All vegan</p>
                <p class="btn btn-outline-info text-white product-info-button" data-toggle="tooltip" data-html="true" data-placement="top" title="Made with love in Colorado.<br/><br/><i>psst...</i> we offer free shipping within the state." style="margin-left: 15px; padding-top: 12px;"><img src="~/Content/Images/ColoradoIcon.png" style="filter: invert(1); width: 23px; margin-top: -3px;" /> &nbsp;Made in Colorado</p>
            </div>
        </div>
    }
</div>


<div class="modal fade" id="ModalPopUp" role="dialog">
    <div class="modal-dialog err-pop" style="">
        <div class="modal-content">
            <div class="modal-header">
                <button id="DivClose" type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body" style="text-align:center;">
                Put Your Html Element Here
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    function UpdatePrice(Varient) {
        var newPrice = @Model.ProductPrice + parseInt(Varient.split("$")[1]);
        console.log(newPrice);
    }
</script>

<script type="text/javascript">
    $(function () {
        $('#addToCartButton').click(function () {
            $.getScript("/Cart/AddToCart");
        });
    });
</script>
