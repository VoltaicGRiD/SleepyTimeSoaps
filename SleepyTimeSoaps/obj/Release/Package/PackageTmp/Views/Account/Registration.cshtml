@model SleepyTimeSoaps.Models.RegistrationView

@{
    ViewBag.Title = "Registration";
}

<div class="bg-secondary w-100" style="border-radius: 20px;">

    <div class="bg-image hover-overlay ripple shadow-1-strong rounded m-4" style="padding-top: 20px; padding-bottom: 20px;"
         data-mdb-ripple-color="light">

        <h2 class="text-white">Account Registration</h2>

        @if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
        {
            if (ViewBag.Message != null)
            {
                <div class="alert alert-success">
                    <strong>Success!</strong> @Html.Raw(ViewBag.Message)
                </div>
            }
        }
        else
        {
            using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal text-white">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-warning" })

                    <div class="form-group">
                        @Html.LabelFor(model => model.FirstName, "First Name", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-warning" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LastName, "Last Name", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-warning" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-warning" })
                            @Html.ValidationMessage("Error Email", new { @class = "text-warning" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-warning" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ConfirmPassword, "Confirm Password", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-warning" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create Account" class="text-white btn btn-primary" />
                        </div>
                    </div>
                </div>

                if (ViewBag.Message != null)
                {
                    <div class="alert alert-warning">
                        <strong>Error!</strong> @ViewBag.Message
                    </div>
                }

            }
        }

        @section Scripts{

            <script src="~/Scripts/jquery.validate.min.js"></script>
            <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
        }
    </div>
</div>

@*@if (ViewBag.Message != null && !string.IsNullOrWhiteSpace(ViewBag.Message))
{
    <div class="modal" id="responseModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content border-danger">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Response</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    @ViewBag.Message
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
}*@
<script type="text/javascript">
    $(window).on('load', function () {
        $('#responseModal').modal('show');
    });
</script>
